"use client"; // 클라디언트 모드로 개발할래
import localFont from "next/font/local";
import "./globals.css";
import Link from "next/link";
import Image from "next/image";
import { useEffect, useState } from "react";

/* 
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});
*/

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {

  // topics에 있는 걸 배열에 담아서 출력하겠다
  const [topics, setTopics] = useState([]);

  // 서버와 통신 후 출력한다고 하면 useEffect 사용해야 함
  useEffect(()=>{

    fetch('http://localhost:9999/topics')
    .then(res=>{
       return res.json();//json->object
    })
    .then(result=>{
      setTopics(result);
    });

  },[])
  console.log(topics); // topics에 목록이 있는지 확인


  return (
    <html lang="en">
      {/* <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {children}
      </body> */}
      <body>
        <h1>
          <Image src="/home_google_icon.png" alt="home icon" width={48} height={48}></Image>
          <Link href="/">WEB</Link>
        </h1>
        <nav>
          <ol>
            {
              topiscs.map(topic => { return <li key="{topic.id}"><Link href=`/read/${{tioic}.id</li>`></Link></li>})
            }
            {/* <li><Link href="/read/1">html</Link></li>
            <li><Link href="/read/2">css</Link></li>
            <li><Link href="/read/3">javascript</Link></li> */}
          </ol>
        </nav>
        {children}
        <ul>
          <li><Link href="/create">Create</Link></li>
          <li><Link href="/update/1">Update</Link></li>
          <li><button>delete</button></li>
        </ul>
      </body>
    </html>
  );
}
